// Code generated by mockery v2.52.2. DO NOT EDIT.

package mockstore

import mock "github.com/stretchr/testify/mock"

// Entity is an autogenerated mock type for the Entity type
type Entity[ID comparable] struct {
	mock.Mock
}

type Entity_Expecter[ID comparable] struct {
	mock *mock.Mock
}

func (_m *Entity[ID]) EXPECT() *Entity_Expecter[ID] {
	return &Entity_Expecter[ID]{mock: &_m.Mock}
}

// GetID provides a mock function with no fields
func (_m *Entity[ID]) GetID() ID {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetID")
	}

	var r0 ID
	if rf, ok := ret.Get(0).(func() ID); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(ID)
		}
	}

	return r0
}

// Entity_GetID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetID'
type Entity_GetID_Call[ID comparable] struct {
	*mock.Call
}

// GetID is a helper method to define mock.On call
func (_e *Entity_Expecter[ID]) GetID() *Entity_GetID_Call[ID] {
	return &Entity_GetID_Call[ID]{Call: _e.mock.On("GetID")}
}

func (_c *Entity_GetID_Call[ID]) Run(run func()) *Entity_GetID_Call[ID] {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Entity_GetID_Call[ID]) Return(_a0 ID) *Entity_GetID_Call[ID] {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Entity_GetID_Call[ID]) RunAndReturn(run func() ID) *Entity_GetID_Call[ID] {
	_c.Call.Return(run)
	return _c
}

// NewEntity creates a new instance of Entity. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEntity[ID comparable](t interface {
	mock.TestingT
	Cleanup(func())
}) *Entity[ID] {
	mock := &Entity[ID]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
